"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const RingBuffer_1 = require("./RingBuffer");
describe("RingBuffer", function () {
    it("basic", function () {
        const rb = new RingBuffer_1.RingBuffer(3);
        chai_1.assert.isUndefined(rb.peek());
        rb.push(1);
        chai_1.assert.equal(rb.peek(), 1);
        chai_1.assert.equal(rb.pop(), 1);
        chai_1.assert.isUndefined(rb.peek());
    });
    it("lost data", function () {
        const rb = new RingBuffer_1.RingBuffer(3);
        rb.push(1);
        rb.push(2);
        rb.push(3);
        rb.push(4);
        chai_1.assert.equal(rb.pop(), 4);
        chai_1.assert.equal(rb.pop(), 3);
        chai_1.assert.equal(rb.pop(), 2);
        chai_1.assert.isUndefined(rb.pop());
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmluZ0J1ZmZlclRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJSaW5nQnVmZmVyVGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUE0QjtBQUM1Qiw2Q0FBd0M7QUFFeEMsUUFBUSxDQUFDLFlBQVksRUFBRTtJQUVuQixFQUFFLENBQUMsT0FBTyxFQUFFO1FBRVIsTUFBTSxFQUFFLEdBQUcsSUFBSSx1QkFBVSxDQUFTLENBQUMsQ0FBQyxDQUFDO1FBRXJDLGFBQU0sQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7UUFFOUIsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNYLGFBQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRTNCLGFBQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRTFCLGFBQU0sQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFFbEMsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsV0FBVyxFQUFFO1FBRVosTUFBTSxFQUFFLEdBQUcsSUFBSSx1QkFBVSxDQUFTLENBQUMsQ0FBQyxDQUFDO1FBQ3JDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDWCxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ1gsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNYLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFWCxhQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMxQixhQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMxQixhQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMxQixhQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBRWpDLENBQUMsQ0FBQyxDQUFDO0FBRVAsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Fzc2VydH0gZnJvbSAnY2hhaSc7XHJcbmltcG9ydCB7UmluZ0J1ZmZlcn0gZnJvbSAnLi9SaW5nQnVmZmVyJztcclxuXHJcbmRlc2NyaWJlKFwiUmluZ0J1ZmZlclwiLCBmdW5jdGlvbigpIHtcclxuXHJcbiAgICBpdChcImJhc2ljXCIsIGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgY29uc3QgcmIgPSBuZXcgUmluZ0J1ZmZlcjxudW1iZXI+KDMpO1xyXG5cclxuICAgICAgICBhc3NlcnQuaXNVbmRlZmluZWQocmIucGVlaygpKTtcclxuXHJcbiAgICAgICAgcmIucHVzaCgxKTtcclxuICAgICAgICBhc3NlcnQuZXF1YWwocmIucGVlaygpLCAxKTtcclxuXHJcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJiLnBvcCgpLCAxKTtcclxuXHJcbiAgICAgICAgYXNzZXJ0LmlzVW5kZWZpbmVkKHJiLnBlZWsoKSk7XHJcblxyXG4gICAgfSk7XHJcblxyXG4gICAgaXQoXCJsb3N0IGRhdGFcIiwgZnVuY3Rpb24oKSB7XHJcblxyXG4gICAgICAgIGNvbnN0IHJiID0gbmV3IFJpbmdCdWZmZXI8bnVtYmVyPigzKTtcclxuICAgICAgICByYi5wdXNoKDEpO1xyXG4gICAgICAgIHJiLnB1c2goMik7XHJcbiAgICAgICAgcmIucHVzaCgzKTtcclxuICAgICAgICByYi5wdXNoKDQpO1xyXG5cclxuICAgICAgICBhc3NlcnQuZXF1YWwocmIucG9wKCksIDQpO1xyXG4gICAgICAgIGFzc2VydC5lcXVhbChyYi5wb3AoKSwgMyk7XHJcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJiLnBvcCgpLCAyKTtcclxuICAgICAgICBhc3NlcnQuaXNVbmRlZmluZWQocmIucG9wKCkpO1xyXG5cclxuICAgIH0pO1xyXG5cclxufSk7XHJcbiJdfQ==